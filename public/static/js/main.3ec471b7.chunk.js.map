{"version":3,"sources":["Components/Job_Search/JobSearchProvider.js","Components/About_Component/code.jpg","Components/About_Component/About.js","Components/Job_Search/JobSearch.js","Components/Job_Seeker/JobSeeker_Login/UserContext.js","Components/NavBar_Component/NavBar.js","Components/Jobs_View/Single_Job_View/SingleJobView.js","Components/Jobs_View/List_Of_Jobs/ListOfJobs.js","Components/Job_Seeker/JobSeeker_SignUp/JobSeekerSignup.js","Components/Job_Seeker/JobSeeker_Edit_Profile/JobSeekerEditProfile.js","Components/Job_Seeker/CV/CreateCVProvider.js","Components/Job_Seeker/CV/CreateCV.js","Components/Job_Seeker/JobSeeker_Login/JobSeekerLogin.js","Components/ProtectedRoutes.js","Components/Job_Seeker/ProfilePage.js/ProfilePage.js","Components/Job_Seeker/CV/FinalizedUserCV.js","App.js","index.js"],"names":["userContext","createContext","JobSearchProvider","props","useState","jobList","setjobList","fireRedirect","setfireRedirect","isLoading","setIsLoading","findJobs","data","a","axios","post","then","response","console","log","catch","err","message","Provider","value","children","About","className","src","image","alt","JobSearch","useContext","schema","yup","shape","jobName","required","min","city","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","type","name","ref","placeholder","onClick","to","pathname","CandidateContext","UserContext","defaults","withCredentials","userData","setUserData","useEffect","get","error","submitForm","NavBar","isAuthenticated","style","textDecoration","userName","window","location","assign","SingleJobView","id","useParams","job","setJob","companyName","jobDescription","email","ListOfJobs","NojobsFound","reverse","map","jobId","JobseekerSignUp","signUpData","setsignUpData","password","onSubmit","isRegistered","JobSeekerEditProfile","JobSeekerData","setJobSeekerData","setMessage","firstName","matches","lastName","region","aboutMe","max","put","defaultValue","wrap","rows","CvContext","CreateCVProvider","cvCreated","setCvCreated","CreateCV","cols","cv","JobSeekerLogin","ProtectedRoutes","Component","component","rest","render","state","from","ProfilePage","isCvCreated","setIsCvCreated","CvCreated","FinalizedUserCV","lasttName","App","exact","path","JobSeekerSignup","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3ec471b7.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport axios from 'axios';\nimport './JobSearch.css';\n\n// * User Context\nexport const userContext = createContext({});\n\nfunction JobSearchProvider(props) {\n\tconst [jobList, setjobList] = useState([]);\n\tconst [fireRedirect, setfireRedirect] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst findJobs = async (data) => {\n\t\tawait axios\n\t\t\t.post('https://job-app-react.herokuapp.com/jobs/jobSearch', data)\n\t\t\t.then((response) => {\n\t\t\t\tsetIsLoading(true);\n\t\t\t\tsetjobList(response.data);\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tsetfireRedirect(true);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err.message);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<userContext.Provider\n\t\t\tvalue={{ findJobs, jobList, fireRedirect, setfireRedirect, isLoading }}>\n\t\t\t{props.children}\n\t\t</userContext.Provider>\n\t);\n}\n\nexport default JobSearchProvider;\n","export default __webpack_public_path__ + \"static/media/code.f8f83829.jpg\";","import React from 'react';\nimport './About.css';\nimport image from './code.jpg';\n\nfunction About() {\n\treturn (\n\t\t<section>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='left'>\n\t\t\t\t\t<h1 className='titleText'>About Us</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil\n\t\t\t\t\t\talias labore quos sapiente sed, commodi est! Asperiores, minima\n\t\t\t\t\t\tsapiente magni debitis hic accusamus nihil accusantium mollitia\n\t\t\t\t\t\taspernatur fugit rerum odio. <br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Unde, quas\n\t\t\t\t\t\tmolestias. Rem dicta aspernatur veritatis possimus pariatur,\n\t\t\t\t\t\tratione, quaerat necessitatibus autem tempore quae, repellat nisi\n\t\t\t\t\t\tsimilique dolorum omnis temporibus laboriosam. <br />\n\t\t\t\t\t\tLorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil\n\t\t\t\t\t\talias labore quos sapiente sed, commodi est! Asperiores, minima\n\t\t\t\t\t\tsapiente magni debitis hic accusamus nihil accusantium mollitia\n\t\t\t\t\t\taspernatur fugit rerum odio.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tLorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil\n\t\t\t\t\t\talias labore quos sapiente sed, commodi est! Asperiores, minima\n\t\t\t\t\t\tsapiente magni debitis hic accusamus nihil accusantium mollitia\n\t\t\t\t\t\taspernatur fugit rerum odio.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='right'>\n\t\t\t\t\t<div className='image-container'>\n\t\t\t\t\t\t<img src={image} alt='' />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default About;\n","import React, { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Redirect } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { userContext } from './JobSearchProvider';\nimport * as yup from 'yup';\nimport About from '../About_Component/About';\n\nimport './JobSearch.css';\n\nfunction JobSearch() {\n\tconst { findJobs, fireRedirect } = useContext(userContext);\n\n\tconst schema = yup.object().shape({\n\t\tjobName: yup.string().required().min(2),\n\t\tcity: yup.string().required().min(2),\n\t});\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tmode: 'onTouched',\n\t\tresolver: yupResolver(schema),\n\t});\n\treturn (\n\t\t<>\n\t\t\t<section className='main'>\n\t\t\t\t<div className='content'>\n\t\t\t\t\t<h2>We help you find your Dream Job!</h2>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tOnly at Monster. Get insights into real jobs with video job\n\t\t\t\t\t\tdescriptions from hiring managers.\n\t\t\t\t\t</h3>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='jobName'\n\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\tplaceholder='Keyword'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.jobName?.type === 'required' && <p>required!</p>}\n\t\t\t\t\t\t{errors.jobName?.type === 'min' && <p>minLength is 2 </p>}\n\n\t\t\t\t\t\t<input type='text' name='city' ref={register} placeholder='city' />\n\t\t\t\t\t\t{errors.city?.type === 'required' && <p>required</p>}\n\t\t\t\t\t\t{errors.city?.type === 'min' && <p> minLength is 2 </p>}\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='btn' onClick={handleSubmit(findJobs)}>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{fireRedirect && (\n\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\tpathname: '/ListOfJobs',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<About />\n\t\t</>\n\t);\n}\n\nexport default JobSearch;\n","import React, { useState, createContext, useEffect } from 'react';\n\nimport axios from 'axios';\n\nexport const CandidateContext = createContext();\n\nfunction UserContext({ children }) {\n\taxios.defaults.withCredentials = true;\n\n\tconst [userData, setUserData] = useState([]);\n\n\tconst submitForm = (data) => {\n\t\taxios\n\t\t\t.post('https://job-app-react.herokuapp.com/jobSeeker/login', data)\n\t\t\t.then((response) => {\n\t\t\t\tsetUserData(response.data);\n\t\t\t\tconsole.log(response.data);\n\t\t\t})\n\t\t\t.catch((err) => {});\n\t};\n\t// Get User information from back end if user successfully logged in.\n\ttry {\n\t\tuseEffect(() => {\n\t\t\taxios\n\t\t\t\t.get('https://job-app-react.herokuapp.com/jobSeeker/login')\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetUserData(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t});\n\t\t}, []);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\n\treturn (\n\t\t<CandidateContext.Provider value={{ submitForm, userData }}>\n\t\t\t{children}\n\t\t</CandidateContext.Provider>\n\t);\n}\n\nexport default UserContext;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CandidateContext } from '../Job_Seeker/JobSeeker_Login/UserContext';\nimport axios from 'axios';\nimport './NavBar.css';\n\nfunction NavBar() {\n\tconst { userData } = useContext(CandidateContext);\n\n\tconst logout = () => {\n\t\ttry {\n\t\t\taxios\n\t\t\t\t.get('https://job-app-react.herokuapp.com/jobSeeker/logout')\n\t\t\t\t.then(() => {\n\t\t\t\t\twindow.location.assign('/');\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<header>\n\t\t\t<Link className='logo' to='/'>\n\t\t\t\t<h2>M</h2>\n\t\t\t</Link>\n\t\t\t<ul className='navigation'>\n\t\t\t\t{/* Display if User is NOT logged in */}\n\t\t\t\t{userData.isAuthenticated ? null : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/JobSeekerSignup'>\n\t\t\t\t\t\t\t<li>Sign Up</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/JobSeekerLogin'>\n\t\t\t\t\t\t\t<li>login</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{/* Display if User IS logged in */}\n\t\t\t\t{userData.isAuthenticated ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/ProfilePage'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span>Hello! {userData.userName}</span>\n\t\t\t\t\t\t\t\t<i className='fas fa-user-circle'></i>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<li onClick={logout}>Logout</li>\n\t\t\t\t\t</>\n\t\t\t\t) : null}\n\t\t\t</ul>\n\t\t</header>\n\t);\n}\n\nexport default NavBar;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport './SingleJobView.css';\n\nfunction SingleJobView() {\n\tconst { id } = useParams();\n\tlet [job, setJob] = useState({});\n\n\ttry {\n\t\tuseEffect(() => {\n\t\t\taxios\n\t\t\t\t.get(`https://job-app-react.herokuapp.com/jobs/${id}`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetJob(response.data[0]);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t}, [id]);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\n\treturn (\n\t\t<div className='job'>\n\t\t\t<div className='job-description'>\n\t\t\t\t<h3>{job.jobName}</h3>\n\t\t\t\t<p>{job.companyName}</p>\n\t\t\t\t<p>{job.city}</p>\n\t\t\t</div>\n\t\t\t<p className='description'>{job.jobDescription}</p>\n\t\t\t<h4>Please send your CV to {job.email}</h4>\n\t\t</div>\n\t);\n}\n\nexport default SingleJobView;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { userContext } from '../../Job_Search/JobSearchProvider';\nimport './ListOfJobs.css';\n\nfunction ListOfJobs() {\n\tconst { isLoading, jobList, setfireRedirect } = useContext(userContext);\n\n\tuseEffect(() => {\n\t\tsetfireRedirect(false);\n\t});\n\n\treturn isLoading ? (\n\t\t<h3>Loading....</h3>\n\t) : (\n\t\t<div className='jobList'>\n\t\t\t{jobList.NojobsFound ? (\n\t\t\t\t<h3>No Jobs found regarding {jobList.jobName}</h3>\n\t\t\t) : (\n\t\t\t\tjobList.reverse().map((job) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to={`job/${job.jobId}`}>\n\t\t\t\t\t\t\t<div key={job.jobId} className='singleJob'>\n\t\t\t\t\t\t\t\t<h3>{job.jobName}</h3>\n\t\t\t\t\t\t\t\t<p>{job.companyName}</p>\n\t\t\t\t\t\t\t\t<p>{job.city}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default ListOfJobs;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport '../form.css';\n\nfunction JobseekerSignUp() {\n\tconst [signUpData, setsignUpData] = useState([]);\n\n\tconst submitForm = (data) => {\n\t\taxios\n\t\t\t.post('https://job-app-react.herokuapp.com/jobSeeker/sign_up', data)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tsetsignUpData(response.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err.message);\n\t\t\t});\n\t};\n\n\tconst schema = yup.object().shape({\n\t\tuserName: yup.string().required().min(2),\n\t\temail: yup.string().email().required(),\n\t\tpassword: yup.string().required().min(8),\n\t});\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tmode: 'onTouched',\n\t\tresolver: yupResolver(schema),\n\t});\n\n\t// * Yup Form ends here\n\n\treturn (\n\t\t<div className='form-container'>\n\t\t\t<form className='form' onSubmit={handleSubmit(submitForm)}>\n\t\t\t\t<h1>Sign Up </h1>\n\n\t\t\t\t<input name='userName' ref={register} placeholder='user name*' />\n\t\t\t\t{errors.userName?.type === 'required' && <span>Required!</span>}\n\t\t\t\t{errors.userName?.type === 'min' && <span>too short</span>}\n\n\t\t\t\t{/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n\t\t\t\t<input type='text' name='email' ref={register} placeholder='email *' />\n\t\t\t\t{errors.email?.type === 'required' && <span>Required!</span>}\n\t\t\t\t{errors.email?.type === 'min' && <span> too short</span>}\n\t\t\t\t{errors.email?.type === 'email' && <span>invalid format</span>}\n\n\t\t\t\t{/*++++++++++++++++++++++++++ E-mail  ++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='password *'\n\t\t\t\t/>\n\t\t\t\t{errors.password?.type === 'required' && <span>Required!</span>}\n\t\t\t\t{errors.password?.type === 'min' && <span>too short</span>}\n\t\t\t\t<input id='submit' type='submit' />\n\t\t\t\t<span>{signUpData.message}</span>\n\t\t\t</form>\n\n\t\t\t{signUpData.isRegistered && (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/JobSeekerLogin',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default JobseekerSignUp;\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport axios from 'axios';\nimport { CandidateContext } from '../JobSeeker_Login/UserContext';\nimport '../form.css';\n\nfunction JobSeekerEditProfile() {\n\tconst { userData } = useContext(CandidateContext);\n\n\tconst [JobSeekerData, setJobSeekerData] = useState([]);\n\tconst [message, setMessage] = useState([]);\n\n\t// Gettind user data from database for editing!\n\ttry {\n\t\tuseEffect(() => {\n\t\t\taxios\n\t\t\t\t.get(`https://job-app-react.herokuapp.com/jobSeeker/${userData.id}`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetJobSeekerData(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}, [userData.id]);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\n\t// Submit updated user data to the database\n\tconst submitForm = (data) => {\n\t\taxios\n\t\t\t.put('https://jobsite-app.herokuapp.com/jobSeeker/updateCV', {\n\t\t\t\t...data,\n\t\t\t\tid: userData.id,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tsetMessage(response.data);\n\t\t\t\tconsole.log(message);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\t// * Yup Form starts here\n\tconst schema = yup.object().shape({\n\t\tfirstName: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.min(2)\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tlastName: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.min(2)\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tcity: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.min(2)\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tregion: yup.string().required().min(2),\n\t\taboutMe: yup.string().required().min(10).max(5000),\n\t});\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tmode: 'onTouched',\n\t\tresolver: yupResolver(schema),\n\t});\n\n\treturn (\n\t\t<div className='form-container'>\n\t\t\t<form className='form' onSubmit={handleSubmit(submitForm)}>\n\t\t\t\t<h2> Update Your Profile </h2>\n\t\t\t\t{/*+++++++++First Name  +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='firstName'\n\t\t\t\t\tdefaultValue={JobSeekerData.firstName}\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='First Name *'\n\t\t\t\t/>\n\t\t\t\t{errors.firstName?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.firstName?.type === 'min' && (\n\t\t\t\t\t<span>Please minLength is 2 </span>\n\t\t\t\t)}\n\t\t\t\t{errors.firstName?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/*+++++++++ Last Name +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\tname='lastName'\n\t\t\t\t\tdefaultValue={JobSeekerData.lastName}\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='Last Name *'\n\t\t\t\t/>\n\t\t\t\t{errors.lastName?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.lastName?.type === 'min' && <span>Last name is too short</span>}\n\t\t\t\t{errors.lastName?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n\t\t\t\t<input\n\t\t\t\t\tname='city'\n\t\t\t\t\tdefaultValue={JobSeekerData.city}\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='City *'\n\t\t\t\t/>\n\t\t\t\t{errors.city?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.city?.type === 'min' && <span> too short</span>}\n\t\t\t\t{errors.city?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/*++++++++++++++++++++++++++ E-mail  ++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\tname='region'\n\t\t\t\t\tdefaultValue={JobSeekerData.region}\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='Region *'\n\t\t\t\t/>\n\t\t\t\t{errors.region?.type === 'required' && <span>Required</span>}\n\n\t\t\t\t{/*+++++++++++++++++++++++++ About You  ++++++++++++++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<textarea\n\t\t\t\t\tclassName='text'\n\t\t\t\t\twrap='off'\n\t\t\t\t\trows='20'\n\t\t\t\t\tname='aboutMe'\n\t\t\t\t\tdefaultValue={JobSeekerData.aboutMe}\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='About you *'\n\t\t\t\t/>\n\t\t\t\t{errors.aboutMe?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.aboutMe?.type === 'min' && <span>Too Short!</span>}\n\t\t\t\t<input id='submit' type='submit' />\n\t\t\t\t<span>{message}</span>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default JobSeekerEditProfile;\n","import React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { CandidateContext } from '../JobSeeker_Login/UserContext';\n\nexport const CvContext = createContext();\n\nfunction CreateCVProvider({ children }) {\n\tconst { userData } = useContext(CandidateContext);\n\tconst [cvCreated, setCvCreated] = useState([]);\n\n\tconst submitForm = (data) => {\n\t\taxios\n\t\t\t.post('https://job-app-react.herokuapp.com/jobSeeker/createCV', {\n\t\t\t\t...data,\n\t\t\t\tid: userData.id,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tsetCvCreated(response.data);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<CvContext.Provider value={{ submitForm, cvCreated }}>\n\t\t\t{children}\n\t\t</CvContext.Provider>\n\t);\n}\n\nexport default CreateCVProvider;\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { CvContext } from './CreateCVProvider';\n\nimport '../form.css';\n\nfunction CreateCV() {\n\tconst { submitForm, cvCreated } = useContext(CvContext);\n\t// * Yup Form starts here\n\tconst schema = yup.object().shape({\n\t\tfirstName: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.min(2)\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tlastName: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.min(2)\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tcity: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.min(2)\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tregion: yup.string().required().min(2),\n\t\taboutMe: yup.string().required().min(10).max(5000),\n\t});\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tmode: 'onTouched',\n\t\tresolver: yupResolver(schema),\n\t});\n\n\treturn (\n\t\t<div className='form-container'>\n\t\t\t<form className='form' onSubmit={handleSubmit(submitForm)}>\n\t\t\t\t<h2>Create Your CV </h2>\n\n\t\t\t\t{/*+++++++++First Name  +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='firstName'\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='First Name *'\n\t\t\t\t/>\n\t\t\t\t{errors.firstName?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.firstName?.type === 'min' && (\n\t\t\t\t\t<span>Please minLength is 2 </span>\n\t\t\t\t)}\n\t\t\t\t{errors.firstName?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/*+++++++++ Last Name +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='lastName'\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='Last Name *'\n\t\t\t\t/>\n\t\t\t\t{errors.lastName?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.lastName?.type === 'min' && <span>Last name is too short</span>}\n\t\t\t\t{errors.lastName?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n\t\t\t\t<input type='text' name='city' ref={register} placeholder='City *' />\n\t\t\t\t{errors.city?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.city?.type === 'min' && <span> too short</span>}\n\t\t\t\t{errors.city?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/*++++++++++++++++++++++++++ region  ++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='region'\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='Region *'\n\t\t\t\t/>\n\t\t\t\t{errors.region?.type === 'required' && <span>Required</span>}\n\n\t\t\t\t{/*+++++++++++++++++++++++++ About Me ++++++++++++++++++++++++++++++++++++++++++*/}\n\n\t\t\t\t<textarea\n\t\t\t\t\tclassName='text'\n\t\t\t\t\twrap='off'\n\t\t\t\t\tcols='30'\n\t\t\t\t\trows='20'\n\t\t\t\t\tname='aboutMe'\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='Please do not forget add your education, experience and skills ;)'\n\t\t\t\t/>\n\t\t\t\t{errors.cv?.type === 'required' && <span>Required</span>}\n\t\t\t\t{errors.cv?.type === 'min' && <span>Too Short!</span>}\n\t\t\t\t<input id='submit' type='submit' />\n\t\t\t\t<span>{cvCreated.message}</span>\n\t\t\t</form>\n\t\t\t{cvCreated.cvCreated && (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default CreateCV;\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { CandidateContext } from './UserContext';\nimport '../form.css';\n\nfunction JobSeekerLogin() {\n\tconst { submitForm, userData } = useContext(CandidateContext);\n\n\tconst schema = yup.object().shape({\n\t\tuserName: yup\n\t\t\t.string()\n\t\t\t.required()\n\t\t\t.matches(/^[A-Za-z\\s]+$/, 'Invalid format'),\n\t\tpassword: yup.string().required(),\n\t});\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tmode: 'onTouched',\n\t\tresolver: yupResolver(schema),\n\t});\n\n\t// * Yup Form ends here\n\n\treturn (\n\t\t<div className='form-container'>\n\t\t\t<form className='form' onSubmit={handleSubmit(submitForm)}>\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<input name='userName' ref={register} placeholder='user name*' />\n\t\t\t\t{errors.userName?.type === 'required' && <span>Required!</span>}\n\t\t\t\t{errors.userName?.type === 'min' && <span>too short</span>}\n\t\t\t\t{errors.userName?.type === 'matches' && <span>invalid format</span>}\n\n\t\t\t\t{/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tref={register}\n\t\t\t\t\tplaceholder='password *'\n\t\t\t\t/>\n\t\t\t\t{errors.password?.type === 'required' && <span>Required!</span>}\n\t\t\t\t{errors.password?.type === 'min' && <span>too short</span>}\n\t\t\t\t<input id='submit' type='submit' />\n\t\t\t\t<span>{userData.message}</span>\n\t\t\t</form>\n\n\t\t\t{/* Redirect User to the Homepage after logged in */}\n\t\t\t{userData.isAuthenticated && (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default JobSeekerLogin;\n","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { CandidateContext } from './Job_Seeker/JobSeeker_Login/UserContext';\n\nfunction ProtectedRoutes({ component: Component, ...rest }) {\n\tconst { userData } = useContext(CandidateContext);\n\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) => {\n\t\t\t\tif (userData.isAuthenticated) {\n\t\t\t\t\treturn <Component {...props} />;\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\tpathname: '/JobSeekerLogin',\n\t\t\t\t\t\t\t\tstate: { from: props.location },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}\nexport default ProtectedRoutes;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CandidateContext } from '../JobSeeker_Login/UserContext';\nimport axios from 'axios';\nimport './ProfilePage.css';\n\nfunction ProfilePage() {\n\tconst { userData } = useContext(CandidateContext);\n\tconst [isCvCreated, setIsCvCreated] = useState([]);\n\n\t// *  \"isCvCreated.CvCreated\" used to prevent showing \"Edit Your CV\" to newly registered users that they have not created a CV yet!\n\t// *   and also used to show \"Edit Your CV\" to the users those have already created the CV.\n\n\ttry {\n\t\tuseEffect(() => {\n\t\t\tuserData.isAuthenticated &&\n\t\t\t\taxios\n\t\t\t\t\t.get(`https://job-app-react.herokuapp.com/jobSeeker/${userData.id}`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tsetIsCvCreated(response.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t});\n\t\t}, [userData.id, userData.isAuthenticated]);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\n\treturn (\n\t\t<div className='mainDiv'>\n\t\t\t<div className='profile'>\n\t\t\t\t{userData.isAuthenticated && !isCvCreated.CvCreated ? (\n\t\t\t\t\t<div className='actionDiv'>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/CreateCV'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<i className='fas fa-newspaper'></i>Create CV\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\n\t\t\t\t{userData.isAuthenticated && isCvCreated.CvCreated ? (\n\t\t\t\t\t<div className='actionDiv'>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/FinalizedUserCV'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<i className='fas fa-newspaper'></i>View Your CV\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\n\t\t\t\t{userData.isAuthenticated && isCvCreated.CvCreated ? (\n\t\t\t\t\t<div className='actionDiv'>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/JobSeekerEditProfile'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<i className='far fa-edit'></i> Edit Your CV\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\n\t\t\t\t{userData.isAuthenticated ? (\n\t\t\t\t\t<div className='actionDiv'>\n\t\t\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/CreateCV'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<i className='far fa-trash-alt'></i> Delete my account\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ProfilePage;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CandidateContext } from '../JobSeeker_Login/UserContext';\nimport axios from 'axios';\nimport './FinalizedUserCV.css';\n\nfunction FinalizedUserCV() {\n\tconst { userData } = useContext(CandidateContext);\n\tconst [JobSeekerData, setJobSeekerData] = useState([]);\n\ttry {\n\t\tuseEffect(() => {\n\t\t\taxios\n\t\t\t\t.get(`https://job-app-react.herokuapp.com/jobSeeker/${userData.id}`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetJobSeekerData(response.data);\n\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}, [userData.id]);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\treturn (\n\t\t<div className='main_div'>\n\t\t\t<div className='cv'>\n\t\t\t\t<p>\n\t\t\t\t\t<span>Name - </span>\n\t\t\t\t\t{JobSeekerData.firstName} {JobSeekerData.lasttName}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span>City - </span>\n\t\t\t\t\t{JobSeekerData.city}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<span>Region - </span>\n\t\t\t\t\t{JobSeekerData.region}\n\t\t\t\t</p>\n\t\t\t\t<div className='aboutMe'>\n\t\t\t\t\t<p>{JobSeekerData.aboutMe}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<Link style={{ textDecoration: 'none' }} to='/JobSeekerEditProfile'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<i className='far fa-edit'></i> Edit Your CV\n\t\t\t\t\t</p>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FinalizedUserCV;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport JobSearchProvider from './Components/Job_Search/JobSearchProvider';\nimport JobSearch from './Components/Job_Search/JobSearch';\nimport NavBar from './Components/NavBar_Component/NavBar';\nimport SingleJobView from './Components/Jobs_View/Single_Job_View/SingleJobView';\nimport About from './Components/About_Component/About';\nimport ListOfJobs from './Components/Jobs_View/List_Of_Jobs/ListOfJobs';\nimport JobSeekerSignup from './Components/Job_Seeker/JobSeeker_SignUp/JobSeekerSignup';\nimport UserContext from './Components/Job_Seeker/JobSeeker_Login/UserContext';\nimport JobSeekerEditProfile from './Components/Job_Seeker/JobSeeker_Edit_Profile/JobSeekerEditProfile';\nimport CreateCVProvider from './Components/Job_Seeker/CV/CreateCVProvider';\nimport CreateCV from './Components/Job_Seeker/CV/CreateCV';\nimport JobSeekerLogin from './Components/Job_Seeker/JobSeeker_Login/JobSeekerLogin';\nimport ProtectedRoutes from './Components/ProtectedRoutes';\nimport ProfilePage from './Components/Job_Seeker/ProfilePage.js/ProfilePage';\nimport FinalizedUserCV from './Components/Job_Seeker/CV/FinalizedUserCV';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Router>\n\t\t\t\t<UserContext>\n\t\t\t\t\t<JobSearchProvider>\n\t\t\t\t\t\t<CreateCVProvider>\n\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={JobSearch} />\n\t\t\t\t\t\t\t\t<Route exact path='/About' component={About} />\n\t\t\t\t\t\t\t\t<Route exact path='/ListOfJobs' component={ListOfJobs} />\n\t\t\t\t\t\t\t\t<Route exact path='/job/:id' component={SingleJobView} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/JobSeekerSignup'\n\t\t\t\t\t\t\t\t\tcomponent={JobSeekerSignup}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/JobSeekerLogin'\n\t\t\t\t\t\t\t\t\tcomponent={JobSeekerLogin}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ProtectedRoutes\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/ProfilePage'\n\t\t\t\t\t\t\t\t\tcomponent={ProfilePage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ProtectedRoutes exact path='/CreateCV' component={CreateCV} />\n\t\t\t\t\t\t\t\t<ProtectedRoutes\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/FinalizedUserCV'\n\t\t\t\t\t\t\t\t\tcomponent={FinalizedUserCV}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ProtectedRoutes\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/JobSeekerEditProfile'\n\t\t\t\t\t\t\t\t\tcomponent={JobSeekerEditProfile}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</CreateCVProvider>\n\t\t\t\t\t</JobSearchProvider>\n\t\t\t\t</UserContext>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}