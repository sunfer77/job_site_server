{"version":3,"sources":["Components/Job_Search/JobSearchProvider.js","Components/Job_Search/JobSearch.js","Components/Job_Seeker/JobSeeker_Login/UserContext.js","Components/NavBar_Component/NavBar.js","Components/Jobs_View/Single_Job_View/SingleJobView.js","Components/Jobs_View/List_Of_Jobs/ListOfJobs.js","Components/Job_Seeker/JobSeeker_SignUp/JobSeekerSignup.js","Components/Job_Seeker/JobSeeker_Edit_Profile/JobSeekerEditProfile.js","Components/Job_Seeker/CV/CreateCVProvider.js","Components/Job_Seeker/CV/CreateCV.js","Components/Job_Seeker/JobSeeker_Login/JobSeekerLogin.js","Components/ProtectedRoutes.js","Components/Job_Seeker/ProfilePage.js/ProfilePage.js","Components/Job_Seeker/CV/FinalizedUserCV.js","Components/Company/CompanyProfilePage.js","App.js","index.js"],"names":["jobsContext","createContext","JobSearchProvider","props","useState","jobList","setjobList","fireRedirect","setfireRedirect","isLoading","setIsLoading","findJobs","data","a","axios","post","then","response","catch","err","console","log","message","Provider","value","children","JobSearch","useContext","schema","yup","shape","jobName","required","min","city","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","className","type","name","ref","placeholder","onClick","to","pathname","CandidateContext","UserContext","userData","setUserData","authentcating","setAuthenticating","defaults","withCredentials","useEffect","abortCont","AbortController","get","signal","abort","error","submitForm","responseGoogle","googleData","userName","profileObj","googleID","googleId","email","NavBar","isAuthenticated","style","color","id","window","location","assign","SingleJobView","useParams","job","setJob","companyName","contractType","jobDescription","textDecoration","companyId","ListOfJobs","pageNumber","setPageNumber","viewedPages","NojobsFound","slice","map","jobId","reverse","previousLabel","nextLabel","pageCount","Math","ceil","length","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","JobseekerSignUp","signUpData","setsignUpData","password","onSubmit","isRegistered","JobSeekerEditProfile","JobSeekerData","setJobSeekerData","setMessage","firstName","matches","lastName","region","aboutMe","max","put","defaultValue","wrap","rows","CvContext","CreateCVProvider","cvCreated","setCvCreated","CreateCV","cols","cv","JobSeekerLogin","clientId","process","buttonText","onSuccess","onFailure","cookiePolicy","ProtectedRoutes","Component","component","rest","render","state","from","ProfilePage","isCvCreated","setIsCvCreated","logout","deleteUser","delete","alert","CvCreated","FinalizedUserCV","lasttName","CompanyProfilePage","company","setCompany","setJobList","aboutCompany","App","exact","path","JobSeekerSignup","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f30fe698.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\nimport \"./JobSearch.css\";\n\n// * User Context\nexport const jobsContext = createContext({});\n\nfunction JobSearchProvider(props) {\n  const [jobList, setjobList] = useState([]);\n\n  // fireRedirect used to redirect user to listOfJobs page after obtained searched result from db.\n  const [fireRedirect, setfireRedirect] = useState(false);\n  //----------------------------------------------------------------------------------------------\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const findJobs = async (data) => {\n    setIsLoading(true);\n    try {\n      await axios\n        // .post(\"http://localhost:3001/jobs/jobSearch\", data)\n        .post(\"https://job-app-react.herokuapp.com/jobs/jobSearch\", data)\n        .then((response) => {\n          setjobList(response.data);\n          setfireRedirect(true);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n   \n  };\n\n  return (\n    <jobsContext.Provider\n      value={{ findJobs, jobList, fireRedirect, setfireRedirect, isLoading }}\n    >\n      {props.children}\n    </jobsContext.Provider>\n  );\n}\n\nexport default JobSearchProvider;\n","import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jobsContext } from \"./JobSearchProvider\";\nimport * as yup from \"yup\";\n\nimport \"./JobSearch.css\";\n\nfunction JobSearch() {\n  const { findJobs, fireRedirect, isLoading } = useContext(jobsContext);\n\n  const schema = yup.object().shape({\n    jobName: yup.string().required().min(2),\n    city: yup.string().required().min(2),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onTouched\",\n    resolver: yupResolver(schema),\n  });\n  return (\n    <div className=\"content\">\n      <div>\n        <h2>We help you find your Dream Job!</h2>\n        <h3>\n          Get insights into real jobs with video job descriptions from hiring\n          managers.\n        </h3>\n      </div>\n      <div>\n        <form>\n          <input\n            type=\"text\"\n            name=\"jobName\"\n            ref={register}\n            placeholder=\"Keyword\"\n          />\n          {errors.jobName?.type === \"required\" && <p>required!</p>}\n          {errors.jobName?.type === \"min\" && <p>minLength is 2 </p>}\n\n          <input type=\"text\" name=\"city\" ref={register} placeholder=\"city\" />\n          {errors.city?.type === \"required\" && <p>required</p>}\n          {errors.city?.type === \"min\" && <p> minLength is 2 </p>}\n        </form>\n      </div>\n      <div>\n        <button className=\"btn\" onClick={handleSubmit(findJobs)}>\n          Search\n        </button>\n\n        {isLoading && (\n          <p>\n            <span> Please wait, We are finding your dream job...</span>\n          </p>\n        )}\n        {/* ------------------------------------------------------------- */}\n        {/* fireRedirect == true? then redirect to list of jobs page  */}\n        {/* ------------------------------------------------------------ */}\n        {fireRedirect && (\n          <Redirect\n            to={{\n              pathname: \"/ListOfJobs\",\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default JobSearch;\n","import React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const CandidateContext = createContext();\n\nfunction UserContext({ children }) {\n  const [userData, setUserData] = useState([]);\n  const [authentcating, setAuthenticating] = useState(false);\n\n  axios.defaults.withCredentials = true;\n\n  // -------------------------------------------------------------------------\n  // Get User CV data from back-end if current user is successfully logged in.\n  // -------------------------------------------------------------------------\n  try {\n    useEffect(() => {\n      const abortCont = new AbortController();\n      axios\n        // .get(\"http://localhost:3001/jobSeeker/userData\", {\n        //   signal: abortCont.signal,\n        // })\n        .get(\"https://job-app-react.herokuapp.com/jobSeeker/userData\", {\n          signal: abortCont.signal,\n        })\n        .then((response) => {\n          setUserData(response.data);\n          console.log(response.data);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            console.log(err.message);\n          }\n        });\n      // -------------------------------------------------------------------------\n      // Clean up function\n      // -------------------------------------------------------------------------\n      return () => abortCont.abort();\n    }, []);\n  } catch (error) {\n    console.log(error);\n  }\n  // -------------------------------------------------------------------------\n  // Sending login data to the backend and varify\n  // -------------------------------------------------------------------------\n  const submitForm = (data) => {\n    setAuthenticating(true);\n    try {\n      axios\n        //.post(\"http://localhost:3001/jobSeeker/login\", data)\n        .post(\"https://job-app-react.herokuapp.com/jobSeeker/login\", data)\n        .then((response) => {\n          setUserData(response.data);\n          setAuthenticating(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // -------------------------------------------------------------------------\n  // Googole login\n  // -------------------------------------------------------------------------\n\n  const responseGoogle = (googleData) => {\n    setAuthenticating(true);\n    axios\n      // .post(\"http://localhost:8001/jobSeeker/loginWithGoogle\", {\n      //   userName: googleData.profileObj.name,\n      //   googleID: googleData.profileObj.googleId,\n      //   email: googleData.profileObj.email,\n      // })\n      .post(\"https://job-app-react.herokuapp.com/jobSeeker/loginWithGoogle\", {\n        userName: googleData.profileObj.name,\n        googleID: googleData.profileObj.googleId,\n        email: googleData.profileObj.email,\n      })\n      .then((response) => {\n        setUserData(response.data);\n        setAuthenticating(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setAuthenticating(false);\n      });\n  };\n\n  return (\n    <CandidateContext.Provider\n      value={{ submitForm, responseGoogle, userData, authentcating }}\n    >\n      {children}\n    </CandidateContext.Provider>\n  );\n}\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CandidateContext } from \"../Job_Seeker/JobSeeker_Login/UserContext\";\nimport axios from \"axios\";\nimport \"./NavBar.css\";\n\nfunction NavBar() {\n  const { userData } = useContext(CandidateContext);\n\n  // ----------------------------------------------------\n  // -------------------- Log out function --------------\n  // ----------------------------------------------------\n  const logout = () => {\n    try {\n      axios\n        //.get(\"http://localhost:3001/jobSeeker/logout\")\n        .get(\"https://job-app-react.herokuapp.com/jobSeeker/logout\")\n        .then((response) => {\n          window.location.assign(\"/\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <header>\n      <Link className=\"logo\" to=\"/\">\n        <h2>Jobs</h2>\n      </Link>\n      <Link className=\"logo-2\" to=\"/\">\n        <h2>J</h2>\n      </Link>\n      {/* ---------------------------------------------------------------------------*/}\n      {/* ----------------------Display once the user is authenticated --------------------*/}\n      {/* ---------------------------------------------------------------------------*/}\n      <ul className=\"navigation\">\n        {userData.isAuthenticated ? (\n          <>\n            <Link to=\"/ProfilePage\">\n              <li>\n                <i\n                  style={{ color: \"#28aa41\" }}\n                  className=\"fas fa-user-circle\"\n                  id=\"icon\"\n                ></i>\n              </li>\n            </Link>\n            <div className=\"logout\">\n              <li onClick={logout}>\n                <i id=\"icon\" className=\"fas fa-sign-out-alt\"></i>\n              </li>\n            </div>\n          </>\n        ) : (\n          <Link to=\"/JobSeekerLogin\">\n            {/* -----------------------------------------------------------------------------------*/}\n            {/* ----------------------Display if the user is not authenticated --------------------*/}\n            {/* -----------------------------------------------------------------------------------*/}\n            <i\n              style={{ color: \"#8F9296\" }}\n              className=\"fas fa-user-circle\"\n              id=\"icon\"\n            ></i>\n          </Link>\n        )}\n      </ul>\n    </header>\n  );\n}\n\nexport default NavBar;\n","import React, {\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  useParams\n} from \"react-router\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./SingleJobView.css\";\n\nfunction SingleJobView() {\n  const {\n    id\n  } = useParams();\n  let [job, setJob] = useState({});\n\n  try {\n    // -------------------------------------------------------------------------- //\n    // --------------Get and display a Single Job by Id ------------------------- //\n    // ------------- once user redirected to \"\"/job/${job.jobId}\"\" from \"/ListOfJobs\"\n    // -------------------------------------------------------------------------- //\n\n    useEffect(() => {\n      const abortCont = new AbortController();\n      axios\n        //.get(`http://localhost:3001/jobs/${id}`, { signal: abortCont.signal })\n        .get(`https://job-app-react.herokuapp.com/jobs/${id}`, {\n            signal: abortCont.signal,\n          })\n          .then((response) => {\n            setJob(response.data[0]);\n          })\n          .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            console.log(err);\n          }\n        });\n      // ------------------------------------------------------------------- //\n      // ---------------- useEffect clean Up Function -----------------------//\n      // ----------------------Thank You Net Ninja! ------------------------ //\n      return () => abortCont.abort();\n    }, [id]);\n    }\n    catch (error) {\n      console.log(error);\n    }\n\n  return (\n    < div className = \"job\" >\n      <\n      div className = \"job-name\" >\n      <\n      h2 > {\n        job.jobName\n      } < /h2> <\n      /div>\n\n      < div className = \"job-description\" >\n        <\n        p > {\n          job.companyName\n        } < /p> <\n        p > {\n          job.city\n        } < /p> <\n        p > {\n          job.contractType\n        } < /p>\n\n      < /div>\n      < p className = \"description\" > {\n          job.jobDescription\n        } < /p> <\n        p className = \"email\" >\n        Please send your CV to < span > {\n          job.email\n        } < /span> <\n        /p> <\n        div className = \"more-jobs\" >\n        <\n        Link\n          style = {\n            {\n              textDecoration: \"none\"\n            }\n          }\n          to = {\n              `/company/${job.companyId}`\n            } >\n            <\n            p > More Jobs from {\n              job.companyName\n            } < /p> <\n            /Link> <\n            /div> <\n            /div>\n          );\n}\n\nexport default SingleJobView;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jobsContext } from \"../../Job_Search/JobSearchProvider\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./ListOfJobs.css\";\n\nfunction ListOfJobs() {\n  const { jobList, setfireRedirect } = useContext(jobsContext);\n\n  // Variables used for ReactPaginate\n  const [pageNumber, setPageNumber] = useState(0);\n  const jobsPerPage = 4;\n  const viewedPages = pageNumber * jobsPerPage;\n\n  useEffect(() => {\n    setfireRedirect(false);\n  });\n\n  return (\n    <div>\n      <div className=\"jobList\">\n        {/* ----------------------------------------------------------------------------------- */}\n        {/*       If no requiested jobs in database */}\n        {/* ----------------------------------------------------------------------------------- */}\n        {jobList.NojobsFound ? (\n          <p>\n            This is so embarrassing! No Jobs found regarding{\" \"}\n            <span>{jobList.jobName} </span>\n            in <span> {jobList.city}</span>! Please try react relatated jobs in\n            Milan!\n          </p>\n        ) : (\n          jobList\n            .slice(viewedPages, viewedPages + jobsPerPage)\n            .map((job) => {\n              return (\n                // -----------------------------------------------------------------------------------\n                //      If found requiested jobs in database display list of jobs\n                // -----------------------------------------------------------------------------------\n                <div key={job.jobId} className=\"singleJob\">\n                  <Link\n                    style={{ textDecoration: \"none\" }}\n                    to={`job/${job.jobId}`}\n                  >\n                    <h3>{job.jobName}</h3>\n                    <p>{job.companyName}</p>\n                    <p>{job.city}</p>\n                  </Link>\n                </div>\n              );\n            })\n            .reverse()\n        )}\n        {/* ----------------------------------------------------------------------------------- */}\n        {/* --------------------------- React pagination ---------------------------------------*/}\n        {/*       If no requiested jobs in database hide pagination                             */}\n        {/* ----------------------------------------------------------------------------------- */}\n        <div\n          className={`${\n            !jobList.NojobsFound ? \"pagination-container\" : \"pagination-none\"\n          }`}\n        >\n          <ReactPaginate\n            previousLabel={\"<<\"}\n            nextLabel={\">>\"}\n            pageCount={Math.ceil(jobList.length / jobsPerPage)}\n            onPageChange={({ selected }) => {\n              setPageNumber(selected);\n            }}\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttn\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ListOfJobs;\n","import React, { useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport \"../form.css\";\n\nfunction JobseekerSignUp() {\n  const [signUpData, setsignUpData] = useState([]);\n\n  const submitForm = (data) => {\n    try {\n      axios\n        //.post(\"http://localhost:3001/jobSeeker/sign_up\", data)\n        .post(\"https://job-app-react.herokuapp.com/jobSeeker/sign_up\", data)\n        .then((response) => {\n          setsignUpData(response.data);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    \n  };\n\n  const schema = yup.object().shape({\n    userName: yup.string().required().min(2),\n    email: yup.string().email().required(),\n    password: yup.string().required().min(8),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onTouched\",\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit(submitForm)}>\n        <div className=\"form-signup\">\n          <h2>\n            <i className=\"fas fa-sign-in-alt\"></i>Sign up\n          </h2>\n        </div>\n\n        {/* +++++++++ USer Name +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n        <input name=\"userName\" ref={register} placeholder=\"user name*\" />\n        {errors.userName?.type === \"required\" && <span>Required!</span>}\n        {errors.userName?.type === \"min\" && <span>too short</span>}\n\n        {/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n        <input type=\"text\" name=\"email\" ref={register} placeholder=\"email *\" />\n        {errors.email?.type === \"required\" && <span>Required!</span>}\n        {errors.email?.type === \"min\" && <span> too short</span>}\n        {errors.email?.type === \"email\" && <span>invalid format</span>}\n\n        {/*++++++++++++++++++++++++++ E-mail  ++++++++++++++++++++++++++++++*/}\n\n        <input\n          type=\"password\"\n          name=\"password\"\n          ref={register}\n          placeholder=\"password *\"\n        />\n        {errors.password?.type === \"required\" && <span>Required!</span>}\n        {errors.password?.type === \"min\" && <span>too short</span>}\n        <input id=\"submit\" type=\"submit\" />\n        <span>{signUpData.message}</span>\n      </form>\n      <Link to=\"/JobSeekerLogin\">\n        <p>Have an account?</p>\n      </Link>\n\n      {/* ------------------------------------------ */}\n      {/* Redirect User to login page after register */}\n      {/* ------------------------------------------ */}\n\n      {signUpData.isRegistered && (\n        <Redirect\n          to={{\n            pathname: \"/JobSeekerLogin\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default JobseekerSignUp;\n","import React, { useContext, useState, useEffect } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { CandidateContext } from \"../JobSeeker_Login/UserContext\";\nimport \"../form.css\";\n\nfunction JobSeekerEditProfile() {\n  const { userData } = useContext(CandidateContext);\n\n  const [JobSeekerData, setJobSeekerData] = useState([]);\n  const [message, setMessage] = useState([]);\n\n  // -------------------------------------------------------------\n  // fetch user data to use as default values in inputs for update\n  // -------------------------------------------------------------\n\n  try {\n    useEffect(() => {\n      const abortCont = new AbortController();\n      axios\n        .get(\n          `https://job-app-react.herokuapp.com/jobSeeker/user/${userData.id}`,\n          {\n            signal: abortCont.signal,\n          }\n        )\n        // .get(`http://localhost:8001/jobSeeker/user/${userData.id}`, {\n        //   signal: abortCont.signal,\n        // })\n        .then((response) => {\n          setJobSeekerData(response.data);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            console.log(err);\n          }\n        });\n      return () => abortCont.abort();\n    }, [userData.id]);\n  } catch (err) {\n    console.log(JobSeekerEditProfile);\n  }\n\n  // -------------------------------------------------------------\n  // Submit updated user data to the database\n  // -------------------------------------------------------------\n\n  const submitForm = (data) => {\n    try {\n      axios\n        // .put(\"http://localhost:3001/jobSeeker/updateCV\", {\n        //   ...data,\n        //   id: userData.id,\n        // })\n        .put(\"https://job-app-react.herokuapp.com/jobSeeker/updateCV\", {\n          ...data,\n          id: userData.id,\n        })\n        .then((response) => {\n          setMessage(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    \n  };\n\n  // * Yup Form starts here\n  const schema = yup.object().shape({\n    firstName: yup\n      .string()\n      .required()\n      .min(2)\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    lastName: yup\n      .string()\n      .required()\n      .min(2)\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    city: yup\n      .string()\n      .required()\n      .min(2)\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    region: yup.string().required().min(2),\n    aboutMe: yup.string().required().min(10).max(5000),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onTouched\",\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit(submitForm)}>\n        <h2> Update Your Profile </h2>\n        {/*+++++++++First Name  +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          defaultValue={JobSeekerData.firstName}\n          ref={register}\n          placeholder=\"First Name *\"\n        />\n        {errors.firstName?.type === \"required\" && <span>Required</span>}\n        {errors.firstName?.type === \"min\" && (\n          <span>Please minLength is 2 </span>\n        )}\n        {errors.firstName?.type === \"matches\" && <span>invalid format</span>}\n\n        {/*+++++++++ Last Name +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n        <input\n          name=\"lastName\"\n          defaultValue={JobSeekerData.lastName}\n          ref={register}\n          placeholder=\"Last Name *\"\n        />\n        {errors.lastName?.type === \"required\" && <span>Required</span>}\n        {errors.lastName?.type === \"min\" && <span>Last name is too short</span>}\n        {errors.lastName?.type === \"matches\" && <span>invalid format</span>}\n\n        {/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n        <input\n          name=\"city\"\n          defaultValue={JobSeekerData.city}\n          ref={register}\n          placeholder=\"City *\"\n        />\n        {errors.city?.type === \"required\" && <span>Required</span>}\n        {errors.city?.type === \"min\" && <span> too short</span>}\n        {errors.city?.type === \"matches\" && <span>invalid format</span>}\n\n        {/*++++++++++++++++++++++++++ E-mail  ++++++++++++++++++++++++++++++*/}\n\n        <input\n          name=\"region\"\n          defaultValue={JobSeekerData.region}\n          ref={register}\n          placeholder=\"Region *\"\n        />\n        {errors.region?.type === \"required\" && <span>Required</span>}\n\n        {/*+++++++++++++++++++++++++ About You  ++++++++++++++++++++++++++++++++++++++++++*/}\n\n        <textarea\n          className=\"text\"\n          wrap=\"off\"\n          rows=\"20\"\n          name=\"aboutMe\"\n          defaultValue={JobSeekerData.aboutMe}\n          ref={register}\n          placeholder=\"About you *\"\n        />\n        {errors.aboutMe?.type === \"required\" && <span>Required</span>}\n        {errors.aboutMe?.type === \"min\" && <span>Too Short!</span>}\n        <input id=\"submit\" type=\"submit\" />\n        <span>{message}</span>\n      </form>\n    </div>\n  );\n}\n\nexport default JobSeekerEditProfile;\n","import React, { createContext, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { CandidateContext } from \"../JobSeeker_Login/UserContext\";\n\nexport const CvContext = createContext();\n\nfunction CreateCVProvider({ children }) {\n  const { userData } = useContext(CandidateContext);\n  const [cvCreated, setCvCreated] = useState([]);\n\n  const submitForm = (data) => {\n    try {\n      axios\n        .post(\"https://job-app-react.herokuapp.com/jobSeeker/createCV\", {\n          ...data,\n          id: userData.id,\n        })\n        // .post(\"http://localhost:3001/jobSeeker/createCV\", {\n        //   ...data,\n        //   id: userData.id,\n        // })\n        .then((response) => {\n          setCvCreated(response.data);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n   \n  };\n\n  return (\n    <CvContext.Provider value={{ submitForm, cvCreated }}>\n      {children}\n    </CvContext.Provider>\n  );\n}\n\nexport default CreateCVProvider;\n","import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { CvContext } from \"./CreateCVProvider\";\n\nimport \"../form.css\";\n\nfunction CreateCV() {\n  const { submitForm, cvCreated } = useContext(CvContext);\n  // --------------------------------------------------------------\n  // --------------------- Yup validation -------------------------\n  // --------------------------------------------------------------\n  const schema = yup.object().shape({\n    firstName: yup\n      .string()\n      .required()\n      .min(2)\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    lastName: yup\n      .string()\n      .required()\n      .min(2)\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    city: yup\n      .string()\n      .required()\n      .min(2)\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    region: yup.string().required().min(2),\n    aboutMe: yup.string().required().min(10).max(5000),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onTouched\",\n    resolver: yupResolver(schema),\n  });\n  // ---------------------------------------------------------------------\n  // ------------------------ Yup validation ends ------------------------\n  // ---------------------------------------------------------------------\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit(submitForm)}>\n        <h2>Create Your CV </h2>\n\n        {/*+++++++++First Name  +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          ref={register}\n          placeholder=\"First Name *\"\n        />\n        {errors.firstName?.type === \"required\" && <span>Required</span>}\n        {errors.firstName?.type === \"min\" && (\n          <span>Please minLength is 2 </span>\n        )}\n        {errors.firstName?.type === \"matches\" && <span>invalid format</span>}\n\n        {/*+++++++++ Last Name +++++++++++++++++++++++++++++++++++++++++++++*/}\n\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          ref={register}\n          placeholder=\"Last Name *\"\n        />\n        {errors.lastName?.type === \"required\" && <span>Required</span>}\n        {errors.lastName?.type === \"min\" && <span>Last name is too short</span>}\n        {errors.lastName?.type === \"matches\" && <span>invalid format</span>}\n\n        {/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n        <input type=\"text\" name=\"city\" ref={register} placeholder=\"City *\" />\n        {errors.city?.type === \"required\" && <span>Required</span>}\n        {errors.city?.type === \"min\" && <span> too short</span>}\n        {errors.city?.type === \"matches\" && <span>invalid format</span>}\n\n        {/*++++++++++++++++++++++++++ region  ++++++++++++++++++++++++++++++*/}\n\n        <input\n          type=\"text\"\n          name=\"region\"\n          ref={register}\n          placeholder=\"Region *\"\n        />\n        {errors.region?.type === \"required\" && <span>Required</span>}\n\n        {/*+++++++++++++++++++++++++ About Me ++++++++++++++++++++++++++++++++++++++++++*/}\n\n        <textarea\n          className=\"text\"\n          wrap=\"off\"\n          cols=\"30\"\n          rows=\"20\"\n          name=\"aboutMe\"\n          ref={register}\n          placeholder=\"Please do not forget add your education, experience and skills ;)\"\n        />\n        {errors.cv?.type === \"required\" && <span>Required</span>}\n        {errors.cv?.type === \"min\" && <span>Too Short!</span>}\n        <input id=\"submit\" type=\"submit\" />\n        <span>{cvCreated.message}</span>\n      </form>\n      {cvCreated.cvCreated && (\n        <Redirect\n          to={{\n            pathname: \"/\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CreateCV;\n","import React, { useContext } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport GoogleLogin from \"react-google-login\";\nimport { CandidateContext } from \"./UserContext\";\nimport \"../form.css\";\n\nfunction JobSeekerLogin() {\n  const { submitForm, responseGoogle, userData, authentcating } =\n    useContext(CandidateContext);\n\n  // ------------ Yup Form starts here --------------\n\n  const schema = yup.object().shape({\n    userName: yup\n      .string()\n      .required()\n      .matches(/^[A-Za-z\\s]+$/, \"Invalid format\"),\n    password: yup.string().required(),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onTouched\",\n    resolver: yupResolver(schema),\n  });\n\n  // ------------ Yup Form ends here --------------\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit(submitForm)}>\n        <div className=\"login\">\n          <h2>\n            <i className=\"fas fa-sign-in-alt\"></i>Login\n          </h2>\n        </div>\n\n        <input name=\"userName\" ref={register} placeholder=\"user name*\" />\n        {errors.userName?.type === \"required\" && <span>Required!</span>}\n        {errors.userName?.type === \"min\" && <span>too short</span>}\n        {errors.userName?.type === \"matches\" && <span>invalid format</span>}\n\n        {/* +++++++++ City +++++++++++++++++++++++++++++++++++++++++++++ */}\n\n        <input\n          type=\"password\"\n          name=\"password\"\n          ref={register}\n          placeholder=\"password *\"\n        />\n        {errors.password?.type === \"required\" && <span>Required!</span>}\n        {errors.password?.type === \"min\" && <span>too short</span>}\n\n        <input id=\"submit\" type=\"submit\" />\n      </form>\n      <div>\n        <p>Or</p>\n      </div>\n\n      {/*---------------------------------------------- */}\n      {/* ----------- Login with Google ----------------*/}\n      {/*---------------------------------------------- */}\n\n      <div className=\"google\">\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n          buttonText=\"Login with Google\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={\"single_host_origin\"}\n        />\n      </div>\n\n      {/*---------------------------------------------- */}\n\n      <Link to=\"/JobSeekerSignup\">\n        <p>Stil don't have a account?</p>\n      </Link>\n      {authentcating && <p>Authenticating.... please wait!</p>}\n      <span>{userData.message}</span>\n\n      {/*---------------------------------------------- */}\n      {/* Redirect User to the ProfilePage after logged in */}\n      {/* --------------------------------------------- */}\n\n      {userData.isAuthenticated && (\n        <Redirect\n          to={{\n            pathname: \"/ProfilePage\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default JobSeekerLogin;\n","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { CandidateContext } from './Job_Seeker/JobSeeker_Login/UserContext';\n\nfunction ProtectedRoutes({ component: Component, ...rest }) {\n\tconst { userData } = useContext(CandidateContext);\n\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) => {\n\t\t\t\tif (userData.isAuthenticated) {\n\t\t\t\t\treturn <Component {...props} />;\n\t\t\t\t} else {\n\t\t\t\t\t     return (\n\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\tpathname: '/JobSeekerLogin',\n\t\t\t\t\t\t\t\tstate: { from: props.location },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}\nexport default ProtectedRoutes;\n\n\n\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CandidateContext } from \"../JobSeeker_Login/UserContext\";\nimport axios from \"axios\";\nimport \"./ProfilePage.css\";\n\nfunction ProfilePage() {\n  const { userData } = useContext(CandidateContext);\n  const [isCvCreated, setIsCvCreated] = useState([]);\n\n  // -----------------------------------------------------------------------------------------------------------------------------------\n  // *  \"isCvCreated.CvCreated\" used to prevent showing \"Edit Your CV\" to newly registered users that they have not created a CV yet!\n  // *   and also used to show \"Edit Your CV\" to the users those have already created the CV.\n  // -----------------------------------------------------------------------------------------------------------------------------------\n  try {\n    useEffect(() => {\n      const abortCont = new AbortController();\n      userData.isAuthenticated &&\n        axios\n          // .get(`http://localhost:3001/jobSeeker/user/${userData.id}`, {\n          //   signal: abortCont.signal,\n          // })\n          .get(\n            `https://job-app-react.herokuapp.com/jobSeeker/user/${userData.id}`,\n            { signal: abortCont.signal }\n          )\n          .then((response) => {\n            setIsCvCreated(response.data);\n          })\n          .catch((err) => {\n            if (err.name === \"AbortError\") {\n              console.log(\"Aborted\");\n            } else {\n              console.log(err);\n            }\n          });\n      return () => abortCont.abort();\n    }, [userData.id, userData.isAuthenticated]);\n  } catch (error) {\n    console.log(error);\n  }\n\n  // ----------------------------------------------------------------\n  // Logout Function\n  // ----------------------------------------------------------------\n  const logout = () => {\n    try {\n      axios\n        // .get(\"http://localhost:3001/jobSeeker/logout\")\n        .get(\"https://job-app-react.herokuapp.com/jobSeeker/logout\")\n        .then(() => {\n          window.location.assign(\"/\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // ----------------------------------------------------------------\n  // Delete User function\n  // ----------------------------------------------------------------\n  const deleteUser = async () => {\n    try {\n      axios\n        //.delete(`http://localhost:3001/jobSeeker/deleteUser/${userData.id}`)\n        .delete(\n          `https://job-app-react.herokuapp.com/jobSeeker/deleteUser/${userData.id}`\n        )\n        .then(() => {\n          alert(\"Deleted\");\n          logout();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"mainDiv\">\n      <div className=\"profile\">\n        {/* ----------------------------------------------------------------------------------- */}\n        {/*       Is current user is authenticated? show username*/}\n        {/* ----------------------------------------------------------------------------------- */}\n        {userData.isAuthenticated && (\n          <div id=\"user\">\n            <p>\n              <span>Hello! {userData.userName}</span>\n            </p>\n          </div>\n        )}\n\n        {/* ----------------------------------------------------------------------------------- */}\n        {/* Is the current user is authenticated and still not created CV ? display \"create CV\" */}\n        {/* ----------------------------------------------------------------------------------- */}\n        {userData.isAuthenticated && !isCvCreated.CvCreated ? (\n          <div className=\"actionDiv\">\n            <Link style={{ textDecoration: \"none\" }} to=\"/CreateCV\">\n              <p>\n                <i className=\"fas fa-newspaper\"></i>Create CV\n              </p>\n            </Link>\n          </div>\n        ) : null}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* Is the current user authenticated and has created CV... display \"View CV\" */}\n        {/* ---------------------------------------------------------------------------- */}\n        {userData.isAuthenticated && isCvCreated.CvCreated ? (\n          <div className=\"actionDiv\">\n            <Link style={{ textDecoration: \"none\" }} to=\"/FinalizedUserCV\">\n              <p>\n                <i className=\"fas fa-newspaper\"></i>View Your CV\n              </p>\n            </Link>\n          </div>\n        ) : null}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* Is the current user authenticated and has created CV... display \"Edit CV\" */}\n        {/* ---------------------------------------------------------------------------- */}\n        {userData.isAuthenticated && isCvCreated.CvCreated ? (\n          <div className=\"actionDiv\">\n            <Link style={{ textDecoration: \"none\" }} to=\"/JobSeekerEditProfile\">\n              <p>\n                <i className=\"far fa-edit\"></i> Edit Your CV\n              </p>\n            </Link>\n          </div>\n        ) : null}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* Delete user account */}\n        {/* ---------------------------------------------------------------------------- */}\n        {userData.isAuthenticated ? (\n          <div className=\"actionDiv\">\n            <p onClick={deleteUser}>\n              <i style={{ color: \"red\" }} className=\"far fa-trash-alt\"></i>\n              Delete my account\n            </p>\n          </div>\n        ) : null}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* Logout user */}\n        {/* ---------------------------------------------------------------------------- */}\n        {userData.isAuthenticated ? (\n          <div className=\"actionDiv\">\n            <p onClick={logout}>\n              <i\n                style={{ color: \"#f7aa63\" }}\n                className=\"fas fa-sign-out-alt\"\n              ></i>\n              Logout\n            </p>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CandidateContext } from \"../JobSeeker_Login/UserContext\";\nimport axios from \"axios\";\nimport \"./FinalizedUserCV.css\";\n\nfunction FinalizedUserCV() {\n  const { userData } = useContext(CandidateContext);\n  const [JobSeekerData, setJobSeekerData] = useState([]);\n  try {\n    useEffect(() => {\n      const abortCont = new AbortController();\n      axios\n        // .get(`http://localhost:3001/jobSeeker/user/${userData.id}`, {\n        //   signal: abortCont.signal,\n        // })\n        .get(\n          `https://job-app-react.herokuapp.com/jobSeeker/user/${userData.id}`,\n          { signal: abortCont.signal }\n        )\n        .then((response) => {\n          setJobSeekerData(response.data);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            console.log(err.message);\n          }\n        });\n      return () => abortCont.abort();\n    }, [userData.id]);\n  } catch (error) {\n    console.log(error);\n  }\n  return (\n    <div className=\"main_div\">\n      <div className=\"cv\">\n        <p>\n          <span>Name - </span>\n          {JobSeekerData.firstName} {JobSeekerData.lasttName}\n        </p>\n        <p>\n          <span>Surname - </span>\n          {JobSeekerData.lastName} {JobSeekerData.lasttName}\n        </p>\n        <p>\n          <span>City - </span>\n          {JobSeekerData.city}\n        </p>\n        <p>\n          <span>Region - </span>\n          {JobSeekerData.region}\n        </p>\n        <div className=\"aboutMe\">\n          <p>{JobSeekerData.aboutMe}</p>\n        </div>\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to=\"/JobSeekerEditProfile\"\n        ></Link>\n        <p>\n          <span>\n            <i className=\"fas fa-newspaper\"></i>\n          </span>\n          My Work\n        </p>\n        <p>\n          <span>\n            <i className=\"fab fa-github\"></i>\n          </span>\n          GitHub\n        </p>\n        <div className=\"editCV\">\n          <Link style={{ textDecoration: \"none\" }} to=\"/JobSeekerEditProfile\">\n            <p>\n              <i className=\"far fa-edit\"></i> Edit Your CV\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FinalizedUserCV;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CompanyProfilePage.css\";\n\n// -------------------------------------------------------------------------------------------------------- //\n// This CompanyProfilePage.js used to display \"More jobs from ${company name}\" in the single job view Page\n// once user redirected to \"/company/${job.companyId}\"\n// -------------------------------------------------------------------------------------------------------- //\n\nfunction CompanyProfilePage() {\n  const { id } = useParams();\n  const [company, setCompany] = useState([]);\n  const [jobList, setJobList] = useState([]);\n\n  // ---------------------------------------------------------- //\n  // ---------------- Getting Company details by Id ------------- //\n  // ---------------------------------------------------------- //\n  try {\n    useEffect(() => {\n      const abortCont = new AbortController();\n      axios\n        // .get(`http://localhost:3001/company/${id}`, {\n        //   signal: abortCont.signal,\n        // })\n        .get(`https://job-app-react.herokuapp.com/company/${id}`, {\n          signal: abortCont.signal,\n        })\n        .then((response) => {\n          setCompany(response.data[0]);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            console.log(err);\n          }\n        });\n      // ---------------------------------------------------------- //\n      // ---------------- useEffect clean Up Function ------------- //\n      // ---------------------------------------------------------- //\n      return () => abortCont.abort();\n    }, [id]);\n  } catch (err) {\n    console.log(err);\n  }\n\n  // ---------------------------------------------------------- //\n  // ---------------- get jobs by company Id ------------- //\n  // ---------------------------------------------------------- //\n  useEffect(() => {\n    const abortCont = new AbortController();\n    axios\n      // .get(`http://localhost:3001/jobs/company/${id}`, {\n      //   signal: abortCont.signal,\n      // })\n      .get(`https://job-app-react.herokuapp.com/jobs/company/${id}`, {\n        signal: abortCont.signal,\n      })\n      .then((response) => {\n        setJobList(response.data);\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          console.log(err);\n        }\n      });\n    // ---------------------------------------------------------- //\n    // ---------------- useEffect clean Up Function ------------- //\n    // ---------------------------------------------------------- //\n    return () => abortCont.abort();\n  }, [id]);\n\n  return (\n    // --------------------------------------------------------------- //\n    //-------------------  Company basic details  -------------------- //\n    //---------------------------------------------------------------- //\n    <div className=\"company\">\n      <div className=\"company-details\">\n        <h1>{company.companyName}</h1>\n        <p>\n          {company.region}, {company.city}\n        </p>\n      </div>\n      <div className=\"description\">\n        <p>{company.aboutCompany}</p>\n      </div>\n\n      <div className=\"job-List\">\n        <div className=\"active-jobs\">\n          <p>Active Jobs</p>\n        </div>\n        {/* ----------------------------------------------------------------------*/}\n        {/*Mapping through and display active list of jobs of the specific Company*/}\n        {/* ----------------------------------------------------------------------*/}\n        {jobList\n          .map((job) => {\n            return (\n              <div key={job.jobId} className=\"single-Job\">\n                <Link\n                  style={{ textDecoration: \"none\" }}\n                  to={`/job/${job.jobId}`}\n                >\n                  <h4>{job.jobName}</h4>\n                  <p>{job.city}</p>\n                </Link>\n              </div>\n            );\n          })\n          .reverse()}\n        {/*-------------Show lastest jobs-----------------*/}\n      </div>\n    </div>\n  );\n}\n\nexport default CompanyProfilePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport JobSearchProvider from \"./Components/Job_Search/JobSearchProvider\";\nimport JobSearch from \"./Components/Job_Search/JobSearch\";\nimport NavBar from \"./Components/NavBar_Component/NavBar\";\nimport SingleJobView from \"./Components/Jobs_View/Single_Job_View/SingleJobView\";\nimport ListOfJobs from \"./Components/Jobs_View/List_Of_Jobs/ListOfJobs\";\nimport JobSeekerSignup from \"./Components/Job_Seeker/JobSeeker_SignUp/JobSeekerSignup\";\nimport UserContext from \"./Components/Job_Seeker/JobSeeker_Login/UserContext\";\nimport JobSeekerEditProfile from \"./Components/Job_Seeker/JobSeeker_Edit_Profile/JobSeekerEditProfile\";\nimport CreateCVProvider from \"./Components/Job_Seeker/CV/CreateCVProvider\";\nimport CreateCV from \"./Components/Job_Seeker/CV/CreateCV\";\nimport JobSeekerLogin from \"./Components/Job_Seeker/JobSeeker_Login/JobSeekerLogin\";\nimport ProtectedRoutes from \"./Components/ProtectedRoutes\";\nimport ProfilePage from \"./Components/Job_Seeker/ProfilePage.js/ProfilePage\";\nimport FinalizedUserCV from \"./Components/Job_Seeker/CV/FinalizedUserCV\";\nimport CompanyProfilePage from \"./Components/Company/CompanyProfilePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <UserContext>\n          <JobSearchProvider>\n            <CreateCVProvider>\n              <NavBar />\n              <Switch>\n                <Route exact path=\"/\" component={JobSearch} />\n                <Route exact path=\"/ListOfJobs\" component={ListOfJobs} />\n                <Route exact path=\"/job/:id\" component={SingleJobView} />\n                <Route\n                  exact\n                  path=\"/JobSeekerSignup\"\n                  component={JobSeekerSignup}\n                />\n                <Route\n                  exact\n                  path=\"/JobSeekerLogin\"\n                  component={JobSeekerLogin}\n                />\n                <Route\n                  exact\n                  path=\"/company/:id\"\n                  component={CompanyProfilePage}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/ProfilePage\"\n                  component={ProfilePage}\n                />\n                <ProtectedRoutes exact path=\"/CreateCV\" component={CreateCV} />\n                <ProtectedRoutes\n                  exact\n                  path=\"/FinalizedUserCV\"\n                  component={FinalizedUserCV}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/JobSeekerEditProfile\"\n                  component={JobSeekerEditProfile}\n                />\n              </Switch>\n            </CreateCVProvider>\n          </JobSearchProvider>\n        </UserContext>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}